/**
 * Generated by orval v7.9.0 üç∫
 * Do not edit manually.
 * PetPet API
 * Backend API for PetPet online pet shop and adoption platform
 * OpenAPI spec version: v1
 */
export interface AddToCartDto {
  productId: number;
  /**
   * @minimum 1
   * @maximum 2147483647
   */
  quantity: number;
}

export interface AdminReviewActionDto {
  reviewId: number;
  /** @minLength 1 */
  action: string;
  /** @nullable */
  reason?: string | null;
}

export interface AdminReviewDto {
  id?: number;
  /** @nullable */
  userId?: string | null;
  /** @nullable */
  userName?: string | null;
  /** @nullable */
  userEmail?: string | null;
  productId?: number;
  /** @nullable */
  productName?: string | null;
  orderId?: number;
  rating?: number;
  /** @nullable */
  comment?: string | null;
  /** @nullable */
  title?: string | null;
  createdAt?: string;
  /** @nullable */
  updatedAt?: string | null;
  isVerifiedPurchase?: boolean;
  isApproved?: boolean;
  helpfulVotes?: number;
  unhelpfulVotes?: number;
  /** @nullable */
  status?: string | null;
}

export interface AdminReviewDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: AdminReviewDto;
  /** @nullable */
  errors?: string[] | null;
}

export type AnimalSection = typeof AnimalSection[keyof typeof AnimalSection];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AnimalSection = {
  Cats: 'Cats',
  Dogs: 'Dogs',
  Other: 'Other',
} as const;

export interface AuthResponseDto {
  /** @nullable */
  token?: string | null;
  /** @nullable */
  refreshToken?: string | null;
  expiresAt?: string;
  user?: UserDto;
}

export interface AuthResponseDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: AuthResponseDto;
  /** @nullable */
  errors?: string[] | null;
}

export interface BooleanApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: boolean;
  /** @nullable */
  errors?: string[] | null;
}

export interface BulkReviewActionDto {
  reviewIds: number[];
  /** @minLength 1 */
  action: string;
  /** @nullable */
  reason?: string | null;
}

export interface CartItemDto {
  id?: number;
  productId?: number;
  /** @nullable */
  productName?: string | null;
  /** @nullable */
  productImageUrl?: string | null;
  productPrice?: number;
  quantity?: number;
  readonly totalPrice?: number;
  isInStock?: boolean;
  stockQuantity?: number;
  createdAt?: string;
}

export interface CartItemDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: CartItemDto;
  /** @nullable */
  errors?: string[] | null;
}

export interface CartSummaryDto {
  /** @nullable */
  items?: CartItemDto[] | null;
  readonly totalItems?: number;
  readonly totalAmount?: number;
  readonly uniqueProductCount?: number;
  readonly hasOutOfStockItems?: boolean;
}

export interface CartSummaryDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: CartSummaryDto;
  /** @nullable */
  errors?: string[] | null;
}

export interface CreateOrderDto {
  /** @nullable */
  shippingAddress?: string | null;
  /** @nullable */
  notes?: string | null;
}

export interface CreateProductDto {
  /** @nullable */
  name?: string | null;
  /** @nullable */
  description?: string | null;
  price?: number;
  /** @nullable */
  originalPrice?: number | null;
  /** @nullable */
  brand?: string | null;
  stockQuantity?: number;
  lowStockThreshold?: number;
  section?: AnimalSection;
  category?: ProductCategory;
  state?: ProductState;
  /** @nullable */
  images?: CreateProductImageDto[] | null;
}

export interface CreateProductImageDto {
  /** @nullable */
  imageUrl?: string | null;
  /** @nullable */
  altText?: string | null;
  displayOrder?: number;
  isPrimary?: boolean;
}

export interface CreateReviewDto {
  productId: number;
  orderId: number;
  /**
   * @minimum 1
   * @maximum 5
   */
  rating: number;
  /**
   * @minLength 0
   * @maxLength 1000
   */
  comment: string;
  /**
   * @minLength 0
   * @maxLength 100
   * @nullable
   */
  title?: string | null;
}

export interface DashboardStatsDto {
  totalProducts?: number;
  inventoryValue?: number;
  lowStockProductsCount?: number;
  totalCategories?: number;
  /** @nullable */
  recentProducts?: ProductDto[] | null;
}

export interface DashboardStatsDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: DashboardStatsDto;
  /** @nullable */
  errors?: string[] | null;
}

export interface GoogleTokenDto {
  /** @nullable */
  idToken?: string | null;
}

export interface LoginDto {
  /** @nullable */
  email?: string | null;
  /** @nullable */
  password?: string | null;
}

export interface LowStockProductDto {
  id?: number;
  /** @nullable */
  name?: string | null;
  stockQuantity?: number;
  lowStockThreshold?: number;
  /** @nullable */
  brand?: string | null;
  price?: number;
}

export interface LowStockProductDtoListApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  /** @nullable */
  data?: LowStockProductDto[] | null;
  /** @nullable */
  errors?: string[] | null;
}

/**
 * @nullable
 */
export type ObjectApiResponseData = unknown | null;

export interface ObjectApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  /** @nullable */
  data?: ObjectApiResponseData;
  /** @nullable */
  errors?: string[] | null;
}

export interface OrderDto {
  id?: number;
  /** @nullable */
  userId?: string | null;
  /** @nullable */
  orderNumber?: string | null;
  totalAmount?: number;
  status?: OrderStatus;
  createdAt?: string;
  /** @nullable */
  updatedAt?: string | null;
  /** @nullable */
  shippingAddress?: string | null;
  /** @nullable */
  notes?: string | null;
  /** @nullable */
  orderItems?: OrderItemDto[] | null;
}

export interface OrderDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: OrderDto;
  /** @nullable */
  errors?: string[] | null;
}

export interface OrderDtoPagedResult {
  /** @nullable */
  items?: OrderDto[] | null;
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
  totalPages?: number;
  hasNextPage?: boolean;
  hasPreviousPage?: boolean;
}

export interface OrderDtoPagedResultApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: OrderDtoPagedResult;
  /** @nullable */
  errors?: string[] | null;
}

export interface OrderItemDto {
  id?: number;
  productId?: number;
  /** @nullable */
  productName?: string | null;
  quantity?: number;
  unitPrice?: number;
  totalPrice?: number;
  /** @nullable */
  productImageUrl?: string | null;
}

export type OrderStatus = typeof OrderStatus[keyof typeof OrderStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OrderStatus = {
  Waiting: 'Waiting',
  InProcessing: 'InProcessing',
  Completed: 'Completed',
  Withdrawn: 'Withdrawn',
  Rejected: 'Rejected',
} as const;

export interface PagedReviewsDto {
  /** @nullable */
  reviews?: AdminReviewDto[] | null;
  totalCount?: number;
  page?: number;
  pageSize?: number;
  totalPages?: number;
}

export interface PagedReviewsDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: PagedReviewsDto;
  /** @nullable */
  errors?: string[] | null;
}

export type ProductCategory = typeof ProductCategory[keyof typeof ProductCategory];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProductCategory = {
  Toys: 'Toys',
  Food: 'Food',
  Litters: 'Litters',
  Medicines: 'Medicines',
  Accessories: 'Accessories',
  Grooming: 'Grooming',
} as const;

export interface ProductDto {
  id?: number;
  /** @nullable */
  name?: string | null;
  /** @nullable */
  description?: string | null;
  price?: number;
  /** @nullable */
  originalPrice?: number | null;
  /** @nullable */
  brand?: string | null;
  stockQuantity?: number;
  section?: AnimalSection;
  category?: ProductCategory;
  state?: ProductState;
  createdAt?: string;
  /** @nullable */
  updatedAt?: string | null;
  /** @nullable */
  images?: ProductImageDto[] | null;
  reviewCount?: number;
  averageRating?: number;
}

export interface ProductDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: ProductDto;
  /** @nullable */
  errors?: string[] | null;
}

export interface ProductDtoListApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  /** @nullable */
  data?: ProductDto[] | null;
  /** @nullable */
  errors?: string[] | null;
}

export interface ProductDtoPagedResult {
  /** @nullable */
  items?: ProductDto[] | null;
  totalCount?: number;
  pageNumber?: number;
  pageSize?: number;
  totalPages?: number;
  hasNextPage?: boolean;
  hasPreviousPage?: boolean;
}

export interface ProductDtoPagedResultApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: ProductDtoPagedResult;
  /** @nullable */
  errors?: string[] | null;
}

export interface ProductImageDto {
  id?: number;
  /** @nullable */
  imageUrl?: string | null;
  /** @nullable */
  altText?: string | null;
  displayOrder?: number;
  isPrimary?: boolean;
}

/**
 * @nullable
 */
export type ProductReviewSummaryDtoRatingDistribution = {[key: string]: number} | null;

export interface ProductReviewSummaryDto {
  productId?: number;
  averageRating?: number;
  totalReviews?: number;
  /** @nullable */
  ratingDistribution?: ProductReviewSummaryDtoRatingDistribution;
}

export type ProductState = typeof ProductState[keyof typeof ProductState];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProductState = {
  OutOfStock: 'OutOfStock',
  InStock: 'InStock',
  NewProduct: 'NewProduct',
} as const;

export interface RefreshTokenDto {
  /** @nullable */
  refreshToken?: string | null;
}

export interface RegisterDto {
  /** @nullable */
  email?: string | null;
  /** @nullable */
  password?: string | null;
  /** @nullable */
  firstName?: string | null;
  /** @nullable */
  lastName?: string | null;
}

export interface ReviewDto {
  id?: number;
  /** @nullable */
  userId?: string | null;
  /** @nullable */
  userName?: string | null;
  productId?: number;
  /** @nullable */
  productName?: string | null;
  orderId?: number;
  rating?: number;
  /** @nullable */
  comment?: string | null;
  /** @nullable */
  title?: string | null;
  createdAt?: string;
  /** @nullable */
  updatedAt?: string | null;
  isVerifiedPurchase?: boolean;
  helpfulVotes?: number;
  unhelpfulVotes?: number;
  /** @nullable */
  userHelpfulnessVote?: boolean | null;
}

export interface ReviewHelpfulnessDto {
  /**
   * @minimum 1
   * @maximum 2147483647
   */
  reviewId: number;
  isHelpful: boolean;
}

/**
 * @nullable
 */
export type ReviewStatsDtoRatingDistribution = {[key: string]: number} | null;

export interface ReviewStatsDto {
  totalReviews?: number;
  pendingReviews?: number;
  approvedReviews?: number;
  rejectedReviews?: number;
  averageRating?: number;
  reviewsToday?: number;
  reviewsThisWeek?: number;
  reviewsThisMonth?: number;
  /** @nullable */
  ratingDistribution?: ReviewStatsDtoRatingDistribution;
}

export interface ReviewStatsDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: ReviewStatsDto;
  /** @nullable */
  errors?: string[] | null;
}

export interface StringApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  /** @nullable */
  data?: string | null;
  /** @nullable */
  errors?: string[] | null;
}

export interface UpdateCartItemDto {
  /**
   * @minimum 1
   * @maximum 2147483647
   */
  quantity: number;
}

export interface UpdateOrderStatusDto {
  status?: OrderStatus;
}

export interface UpdateProductDto {
  /** @nullable */
  name?: string | null;
  /** @nullable */
  description?: string | null;
  price?: number;
  /** @nullable */
  originalPrice?: number | null;
  /** @nullable */
  brand?: string | null;
  stockQuantity?: number;
  lowStockThreshold?: number;
  section?: AnimalSection;
  category?: ProductCategory;
  state?: ProductState;
  /** @nullable */
  images?: CreateProductImageDto[] | null;
}

export interface UpdateReviewDto {
  /**
   * @minimum 1
   * @maximum 5
   * @nullable
   */
  rating?: number | null;
  /**
   * @minLength 0
   * @maxLength 1000
   * @nullable
   */
  comment?: string | null;
  /**
   * @minLength 0
   * @maxLength 100
   * @nullable
   */
  title?: string | null;
}

export interface UserDto {
  /** @nullable */
  id?: string | null;
  /** @nullable */
  email?: string | null;
  /** @nullable */
  firstName?: string | null;
  /** @nullable */
  lastName?: string | null;
  createdAt?: string;
}

export interface UserDtoApiResponse {
  success?: boolean;
  /** @nullable */
  message?: string | null;
  data?: UserDto;
  /** @nullable */
  errors?: string[] | null;
}

export type GetApiAdminReviewsParams = {
SearchTerm?: string;
ProductId?: number;
UserId?: string;
IsApproved?: boolean;
MinRating?: number;
MaxRating?: number;
FromDate?: string;
ToDate?: string;
SortBy?: string;
SortDirection?: string;
Page?: number;
PageSize?: number;
};

export type GetApiAuthGoogleUrlParams = {
state?: string;
};

export type GetApiAuthGoogleCallbackParams = {
code?: string;
state?: string;
};

export type GetApiOrdersParams = {
Status?: OrderStatus;
FromDate?: string;
ToDate?: string;
Page?: number;
PageSize?: number;
};

export type GetApiOrdersMyOrdersParams = {
Status?: OrderStatus;
FromDate?: string;
ToDate?: string;
Page?: number;
PageSize?: number;
};

export type GetApiProductsParams = {
MinPrice?: number;
MaxPrice?: number;
Section?: AnimalSection;
Category?: ProductCategory;
Brand?: string;
State?: ProductState;
Page?: number;
PageSize?: number;
SearchTerm?: string;
};

export type GetApiReviewsCanReviewParams = {
productId?: number;
orderId?: number;
};

